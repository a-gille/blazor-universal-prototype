@page "/send"
@inject blazor_universal_prototype.Shared.ViewModels.SendViewModel ViewModel

<PageTitle>Nachricht versenden</PageTitle>

<FluentStack Orientation="Orientation.Vertical" VerticalGap="20" >
    <h1>Nachricht versenden</h1>
    <FluentStack Orientation="Orientation.Vertical" VerticalGap="0">
        <FluentBodyContent>Aktenfall vom @DateTime.UtcNow.ToShortDateString() @DateTime.UtcNow.ToLongTimeString()</FluentBodyContent>
        <FluentBodyContent>Aktenzeichen: 202503248081</FluentBodyContent>
    </FluentStack>
    <div class="responsive-select">
        <FluentSelect Items="@ViewModel.Categories" Style="width:100%">
        </FluentSelect>
    </div>
    <FluentTextArea Style="width:100%"></FluentTextArea>
    <h3>Anhänge</h3>
    @if(ViewModel.Attachments.Count == 0)
    {
        <FluentStack Orientation="Orientation.Vertical" VerticalAlignment="VerticalAlignment.Top" HorizontalAlignment="HorizontalAlignment.Center" VerticalGap="0">
            <FluentIcon Style="width:52px; height:52px;" Value="@(new Icons.Regular.Size24.FolderArrowUp())" />
            <FluentBodyContent Style="text-align:center">Keine Daten vorhanden</FluentBodyContent>
            <FluentBodyContent Style="text-align:center">Sobald Sie ein neues Dokument hinzufügen, wird es hier angezeigt</FluentBodyContent>
        </FluentStack>
    }
    else
    {
        @foreach (var attachment in ViewModel.Attachments)
        {
            <FluentCard @onclick="() => ViewModel.RemoveAttachmentCommand.Execute(attachment.Id)">
                <FluentStack HorizontalAlignment="@HorizontalAlignment.Left" VerticalAlignment="@VerticalAlignment.Center" HorizontalGap="20">
                    <FluentIcon Value="@(new Icons.Regular.Size24.DocumentPdf())" />
                    <FluentStack Orientation="Orientation.Vertical" HorizontalAlignment="@HorizontalAlignment.Left" VerticalAlignment="@VerticalAlignment.Center" VerticalGap="0">
                        <FluentBodyContent>@attachment.FileName</FluentBodyContent>
                        <FluentBodyContent>@attachment.Size</FluentBodyContent>
                    </FluentStack>
                    <FluentIcon  Value="@(new Icons.Regular.Size24.Dismiss())" />
                </FluentStack>
            </FluentCard>
        }
    }
</FluentStack>

@if (!OperatingSystem.IsBrowser())
{
    <div class="fab-container">
        @if (ViewModel.IsFabOpen)
        {
            <div class="fab-actions">
                <FluentButton Style="width: 56px; height: 56px; border-radius: 50%;" Appearance="Appearance.Accent" @onclick="@ViewModel.PickFileCommand.ExecuteAsync">
                    <FluentIcon Color="Color.Fill" Value="@(new Icons.Regular.Size24.Attach())" />
                </FluentButton>
                <FluentButton Style="width: 56px; height: 56px; border-radius: 50%;" Appearance="Appearance.Accent" @onclick="@ViewModel.PickImageCommand.ExecuteAsync">
                    <FluentIcon Color="Color.Fill" Value="@(new Icons.Regular.Size24.Image())" />
                </FluentButton>
                <FluentButton Style="width: 56px; height: 56px; border-radius: 50%;" Appearance="Appearance.Accent" @onclick="@ViewModel.CapturePhotoCommand.ExecuteAsync">
                    <FluentIcon Color="Color.Fill"  Value="@(new Icons.Regular.Size24.Camera())" />
                </FluentButton>
            </div>
        }

        <FluentButton Style="width: 74px; height: 74px; border-radius: 50%;" Appearance="Appearance.Accent" @onclick="@ViewModel.ToggleFabCommand.ExecuteAsync">
            @if (!ViewModel.IsFabOpen)
            {
                <FluentIcon Style="width: 50px; height: 50px;" Color="Color.Fill"  Value="@(new Icons.Regular.Size24.Add())" />
            }
            else
            {
                <FluentIcon Style="width: 50px; height: 50px;" Color="Color.Fill" Value="@(new Icons.Regular.Size24.Dismiss())" />
            }
        </FluentButton>
    </div>
}

@code {

}
